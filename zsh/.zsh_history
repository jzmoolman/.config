nvim
clear
cd
echo "echo 'test'" > init.vim
nvim
cat init.vim
nvim init.vim
nvim
cat init.vim
cat .config/nvim/init.vim
cat .config/nvim/init.vim | head c- 5
cat .config/nvim/init.vim | head -c 5
cat .config/nvim/init.vim | head -c 10
cat .config/nvim/init.vim | head -lc 10
cat .config/nvim/init.vim | head -cl 10
cat .config/nvim/init.vim | head  10
cat .config/nvim/init.vim | head -n 10
cat .config/nvim/init.vim | head -n 5
cat .config/nvim/init.vim | head -n 5
cat .config/nvim/init.vim | head -n 1
nvim init.vim 
echo $XDG_CONFIG_HOME
 cd /user
XDG_CONFIG_HOME="/User/jzmoolman"
nvim
cd /User/jzmoolman
cd /Users/jzmoolman
XDG_CONFIG_HOME="/Users/jzmoolman"
nvim
cd /Users/jzmoolman
mkdir vim
mv vim nvim
mv init.vim nvim
cd nvim
ls
cd ..
nvim
rm -r nvim
ls
exit
nv
nvim
exit
clear
set
echo $VIMINT
VIMINIT="echo 'hey'" nvim
echo $VIMINIT
VIMINIT="echo 'hey asshole'" nvim
vnim nvim/init.vim
nvim nvim/init.vim
nvim
VIMINIT="echo 'hey asshole'" nvim
nvim
ls
cd nvim
ls
nvim
nvim
ls
rm - bundle
rm -r bundle
rm -R bundle
rm -R bundle
rm -r bundle
rm -r bundle
rmdir bundle
rmdir -R bundle
rmdir -r bundle
rmdir -f bundle
rmdir -dR bundle
rm -dR bundle
;ls
rm -rf colors
ls
ls
ls
clear
exa -la
nvim
nvim
nvimnvim  ~/.ssh/known_hosts
nvim  ~/.ssh/known_hosts
nvim  ~/.ssh/known_hosts
nvim  ~/.ssh/known_hosts
nvim  ~/.ssh/known_hosts
nvim  ~/.ssh/known_hosts
nvim  ~/.ssh/known_hosts
nvim  ~/.ssh/known_hosts
set
set | grep X
cd /Users/jzmoolman/.config
ls
cd nvim
ls
nvim  ~/.ssh/known_hosts
nvim  ~/.ssh/known_hosts
fish
clear
set | grep X
exit
clear
for folder in /Users/jzmoolman/.config/nvim/bundle/ctrlp.vim /Users/jzmoolman/.config/nvim /etc/xdg/nvim /Users/jzmoolman/.local/share/nvim/site /usr/local/share/nvim/site /usr/share/nvim/site /usr/local/Cellar/neovim/0.4.3/share/nvim/runtime /usr/local/Cellar/neovim/0.4.3/share/nvim/runtime/pack/dist/opt/matchit /usr/share/nvim/site/after /usr/local/share/nvim/site/after /Users/jzmoolman/.local/share/nvim/site/after /etc/xdg/nvim/after /Users/jzmoolman/.config/nvim/after\
\
do
clear
cd 
cd .ssh
ls
cat known_hosts
ls -la
\:
clear
ls
cd ~/.config/nvim
ls
cd syntaz
cd syntax
ls
s
cd 
ls
cd .ssh
ls
cd /usr/local/Cellar/neovim/0.4.3/share/nvim/runtime
ls
cd syntax
nvim syntax.vim
set XDG_CONFIG_HOME '/Users/jzmoolman/.config'
ls
cd 
cd .config/nvim/syntax
ls
mv sshknowhost.vim sshknownhosts.vim
ls
pwd
ls
nvim ~/.config/fish/config.fish
fish
clear
exit
brew
sudo brew update
exit
ls
clear
exit
find . -name main* 2> /dev/null
find . -name m*  2> /dev/null
find ~ -name m*  2> /dev/null
find ~ -name teat*  2> /dev/null
find ~ -name teat*  2> /dev/null
find ~ -name "teat*"  2> /dev/null
find ~ -iname "teat*"  2> /dev/null
find ~ -iname "m*"  2> /dev/null
find ~ -iname "ma*"  2> /dev/null
clear
nvim
ls
p;
cd
ls
cd src
ls
cd CS50
ls
cd assignment3
ls
exit
ls -laH /usr/bin/git
ls -la /usr/bin/git
exit
eval "$(ssh-agent -s)"
nvim ~/.ssh/config
ssh-add -K ~/.ssh/id_ed25519
cat ~/.ssh/id_ed25519
cat ~/.ssh/id_ed25519.pub
ls
exit
echo hello world
clear
cd tmp_fish
ls
mkdir my\ files2
ls
ls -la
cd my\ files2
ls
cd .
cd ..
hekp set
ls
cd ..
cd src/CS50
ls
cd assignment5
ls
cd st
cd src
ls
ls P*.*ua
man set
ls
echo in ``pwd
echo in `pwd`
echo in ((pwd)
echo in (pwd)
uname
echo "Hello " (uname) " its me"
echo "Hello `uname`  its me"
edit
exit
for i in {1,254} do; "ping -c1 192.168.1.$i} end\

for i in {1,254} do; ping -c1 192.168.1.$i | grep "bytes from" & done\

for i in {1,254}; do ping -c1 192.168.1.$i | grep "bytes from" & done\

for i in {1,254}; do ping -c1 192.168.1.$i | grep "bytes from" & done\

for i in {1,254}; do echo "192.168.1.$i" \

for i in {1,254}; do echo "192.168.1.$i" & done\

for i in {1,5}; do echo "192.168.1.$i" & done\

for i in {1..5}; do echo "192.168.1.$i" & done\

echo "test"
for i in {1..5}; do echo "192.168.1.$i" done\

for i in {1..5}; do echo "192.168.1.$i" & done\

for i in {1..5}; do echo "192.168.1.$i"; done\

for i in {1..5}; do echo "192.168.1.$i" & done\

for i in {1..5}; do ping 192.168.1.$i & done\

exit
for i in {1..5}; do ping -c 1 192.168.1.$i | grep "Btes from" & done \

for i in {1..5}; do ping -c 1 192.168.1.$i | grep "bytes from" & done \

for i in {1..254}; do ping -c 1 192.168.1.$i | grep "bytes from" & done \

eval "$(ssh-agent -s)"
nvim config
exit
exit
conda
conda --vession
conda --version
conda update
conda update conda
cat ~/.conda/environments.txt
cd usr
ls
ls
cd /
ls
cd usr
ls
cd local
ls
cd \\
exirt
cd 
cd .conda
conda --version
env
set
env
python --version
conda list
conda info
conda env
conda env list
conda avtivate py37
conda activate py37
conda env udpate
conda env
conda ls
ls
conda update
conda list
conda activate py3
python --version
where python
ls -la /usr/bin/python
where python
which python
conda list
conda create -n 6.86x ptyhon=3.6
conda create -n 6.86x python=3.6
conda env list
conda activate 6.86x
conda list
pip install numpy
pip install matplotlib
pip install scipy
pip install tqdm
pip install scikit-learn
conda list
python --vsersion
python --version
nvim
cd
ls -ls
nvim test
nvim test
ls
fg
jobs
fg
nvim +10 test
nbim +/1234
nvim +/1234 test
ex
ex test
nvim +/1234 test
npm
man bpm
man npm
fg
set
exit
fg
exit
set
set VISUAL=nvim
set
set
set
ls
ls -la
nvim .zshrc
nvim .config/zsh
exit
ls
cd 
cd ./src/modvim/terminal
pwd
ls
cat readme.md
ls
set
join(split($PATH,':'),"\n")
join(split("test1:test2",':'),"\n")
split("test1:test2",':')
man split
cd \\

cd 
nvim .config/nvim/init.vim
ls
cd
cd .config/nvim/init.vim.bak
nvim .config/alacritty/alacritty.yml.bak
nvim .config/alacritty/alacritty.yml
fg
nvim .config/alacritty/alacritty.yml
cd 
cp nord.yml .config/alacritty/
nvim .config/alacritty/nord.yml
gf
nvim .config/alacritty/nord.yml .config/alacritty/alacritty.yml
ls
la
exit
exit
ls
./testColor
cd 
nvim .config/nvim/init.vim
nvim
nvim .config/nvim/init.vim
cd .config
cd nvim
ls
cd pack
ls
cd minpac
ls
cd start
;s
ls
cd nord
ls
cd ..
cd /
fg
cd .config
cd 
cd .config/alacritty
ls
nvim alacritty.yml
conda
which conda
conda
which conda
where conda
set
/Users/jzmoolman/miniconda/bin/conda --version
conda --version
exit
find . -name *.so
find . -name "*.so"
exit
cle
clear
zsh --version
cat /etc/zprofile
cat /etc/zsrc
cat /etc/zshrc
cat /etc/zshrc
locale
locale LC_CTYPE
cat .zsh_history
head .zsh_history
head .zsh_history
tail .zsh_history
setopt
cat /etc/zshrc
echo $HISTFILE
tail ~/.config/zsh/.zsh_history
head ~/.config/zsh/.zsh_history
ls
nvim ~/.config/zsh/.zsh_history
ls .config/zsh/
ls .config/zsh
ls -la .config/zsh 
exit
PS1="%# %%"
exit
echo $__conda_setup
set
set | less
exit
logout
if [[ -o login ]]; then\
then> print yes\
then> else\
else> print no\
else> fi
if [[ -o login ]]; then\
 print yes\
else\
 print no\
fi
exit
nvim ~/.config/zsh/.zsh_history
run-help skdjfalj
cat /etc/zshrc
echo $ZDOTDIR
echo $PS1
echo $(ZDOTDIR:-$HOME}
echo $(ZDOTDIR:-$HOME)
echo $(ZDOTDIR)
echo $ZDOTDIR
echo $(ZDOTDIR:-$HOME)
echo ${ZDOTDIR:-$HOME}
echo ${ZDOTDIR}
echo ${ZDOTDIR:-$HOME}
echo ${ZDOTDIR:-$HOME}
echo ${/asf:-$HOME}
echo ${"/asf":-$HOME}
echo ${eee:-$HOME}
cat /etc/zshrc
setopt
PS1="%"
clear
PS1="%%"
PS1="%% "
ls
PS1="l%% "
PS1="%l%% "
PS1="%M%% "
PS1="%m%% "
PS1="%n%% "
PS1="%y%% "
PS1="%y%% "
PS1="%n%% "
PS1="%#%% "
PS1="%# %% "
sudo zsh
PS1="%n%% "
PS1="%? %% "
ll
PS1="%_ %% "
PS1="%_ %% "
asfad
asfad
PS1="%_ %% "
PS1="%d %% "
PS1="%/ %% "
PS1="%~ %% "
cd /
cd Users
cd ~
PS1="%~ %h %% "
PS1="%~ %i  %% "
PS1="%~ %j  %% "
PS1="%~ %L  %% "
cat /etc/zshrc
PS1="%n %# "
PS1="%n@%m %# "
PS1="%n@%m %1  %# "
PS1="%n@%m %1 %# "
adsfa
PS1="%n@%m %1~ %# "
cat /etc/zshenv
set
ls /etc/zsh*
ls -la /etc/zsh*
ls -la /etc/*zsh*
cat /etc/zshenv
la -la
ls /etc
ls /etc/zprofile
cat /etc/zprofile
cat /etc/zshrc_Apple_Terminal
nvim  /etc/zshrc_Apple_Terminal
ls /etc/z*
ls /etc/zshc
cat /etc/zshc
cat /etc/zshrc
cat /etc/zshrc
cat /etc/zen
cat /etc/zshenv
cd .config
cd zsh
ls
ls -la
cat .zshrc
cat .zshrc
cd /var/select
ls
ls -la
cd ..
cd ..
cd /etc
ls
ls -la
nvim zshenv
if [[-z TEST]] . echo "Yup" \
else 
if [[-z TEST]] . echo "Yup" : echo "Nope"\
if\
fi
if [[-z TEST]] . echo "Yup" else echo "Nope" fi\
\
asdf
cat /etc/zshenv
if [[-z TEST]] ; then  echo "Yup" else echo "Nope" fi\
\
asdf\

if [[-z TEST]] ; then  echo "Yup" fi\
\
asdf\
\
if [[-z TEST]] ; then  echo "Yup" fi\
\
asdf\

if [[-z TEST]] ; then  echo "Yup" else echo "Nope" fi\
\
asdf\
\
\
\
\
\
\

if [[-z TEST]] ; then  echo "Yup" fi
if [[-z TEST]]\
then \
echo "Yup"\
fi
cat /etc/zshenv
if [[-z TEST]]\
then \
echo "Yup"\
fi
if [[-z $TEST]]\
then \
echo "Yup"\
fi
if [[-z "$TEST"]]\
then \
echo "Yup"\
fi
if [[ -z "$TEST"]]\
then \
echo "Yup"\
fi
if [[ -z "$TEST" ]]\
then \
echo "Yup"\
fi
if [[ -z "$PATH" ]]\
then \
echo "Yup"\
fi
if [[ -z "$PATH" ]]\
then \
echo "Yup"\
fi
if [[ -z "$PATH" ]]\
then \
echo "Yup"\
fi
if [[ -z "$PATH" ]]\
then \
echo "Yup"\
fi
if [[ -z "$TEST" ]]\
then \
echo "Yup"\
fi
cat /etc/zen
cat /etc/zshenv
cat /etc/zshrc
cd ~
cd
cd .config.zsh
cd .config/zsh
ls
ls -la
cat .zshrc
nvim .zshrc
ls
ls
ls
eval "$ls"
eval "ls"
ls -la
eval "ls -la"
ls
cd 
ls
setop
setopt
setopt NO_CASE_GLOB
Desktop Documents Downloads dotfiles 
ls Desktop Documents Downloads dotfiles 
setopt
emulate -lR zsh
zsh --version
print $ZSH_VERSION
xterm
logout
zsh --l
zsh -l
if [[ -o login ]]; then\
print yes\
else\
print no\
fi
zsh -l
echo $0
cat /etc/zshenv
nvim /etc/zshenv
sudo nvim /etc/zshenv
exit
exirt
exit
exit
print $SHELL
set
exit
print $fpath
ls $fpath
cd $fpath
print $fpath
cd -- $fpath
cd -- '$fpath'
cd -- '"'$fpath'"'
cd '"'$fpath'"'
cd "$fpath"
cd '"$fpath"'
cd '"$fpath"'
cd "'$fpath'"
cd '"$fpath"'
cd '"'$fpath'"'
pint '"$fpath"'
print '"$fpath"'
print '"$fpath'"'
print '"'$fpath'"'
cd '"'$fpath'"'
print $fpath
autoload fn
fn
cat fn
cat > fn
fn
autoload fn
fpath=(. fpath)
fn
print $ARG0
ARGV=ksh zsh
FOO=bar
FOO=foo
Foo=bar print $FOO
FOO=bar print $FOO
echo $FOO
exit
run-help asdfsd
exit
run-help asdfasj
run-help asdf
run-help asdfhhhhhh
run-help asdfhhhhhh
asdfhhhhhhkjlkjhhhlhhh:w
run-help adfadsfh
 /ett/c
exxit
exit
man f 
man f c
man fc
print $PS1
print $PS1
print asdfa
print $PS1
print $PS2
print $PS3
exit
print $PS1
print $PS2
set | more
echo $PS1
echo $PS1
edit
exit
echo $PS1
echo $PS1
su
su
su
su
su
su
su
cd /
ls
cd 
cd /
cd Users
cd jzmoolman
cd /
ls
cd Library
ls
cd A
cd Appl
cd Apple
ls
cd 
echo $PS1
PS1=(base) %n@%m %10<..<%~ %#
PS1=(base) %n@%m %10<...<%~ %#
PS1='(base) %n@%m %10<...<%~ %#'
cd .config
PS1='(base) %n@%m %15<...<%~ %#'
cd zsh
mkdir test
cd test
PS1='(base) %n@%m %<< %#'
PS1='(base) %n@%m %<<~ %#'
cd
cd .config
ls 
cd zsh
ls
cd test
cd 
PS1='(base) %n@%m %10<..<%~ %#'
PS1='(base) %n@%m %<<~ %# '
PS1='%?  %#'
PS1='%(%?  %# '
PS1='%(%?%)  %# '
PS1='%(%?  %# '
asdfa
asdf
PS1='%(?%)  %# '
PS1='%(?..(%?))  %# '
asdf
PS1='%(?..(%?%))  %# '
PS1='%(?..(%?%)) %# '
ls
asdf
PS1='%(?..(%?%)) %# '
PS1='%(?..(%?%)) %# 'asdfasdf
PS1='%(?..(%?%)) %# '
asf
PS1='?..(%?) %# '
PS1='%?..(%?) %# '
asdf
PS1='%(?..(%?%)) %# '
man zshmsic
man zshmisc
PS1='%(?.ok.(%?%)) %# '
ls
asdf
print $SHLVL
exit
set | less
echo $__conda_setup
echo $__conda_setup > tmp
nvim tmp
conda
conda shell.zsh hook
conda
eval "ls"
rm tmp
foo='~/.config'
print $foo
setop
setopt
setopt glosubst
setopt globsubst
print $foo
man zsh
man zsh
man zsh
man zsh
ma zsh
man zsh
man zshexpn
sleep 3 &
print one two three
fn() { print My name is $0;}
fn
exit
PS1='%(2L.+.) %# '
PS1='%(3L.+.) %# '
PS1='%(1L.+.) %# '
RPS1=test
colors
autoload colors
colors
colors
PS1=%{${bg[white]}${fg[red]}%}%(?..(%?%))%{${fg[yellow]}$bg[black]}%}%# "
PS1="%{${bg[white]}${fg[red]}%}%(?..(%?%))%{${fg[yellow]}$bg[black]}%}%# "
ls
asdfa
PS1="%{${bg[white]}${fg[red]}%}%(?..(%?%))%{${fg[yellow]}$bg[black]}%}%# "
PS1="%{${bg[white]}${fg[red]}%}%(?..(%?%))%{${fg[yellow]}$bg[black]}%}%# "
PS1="%{${bg[white]}${fg[red]}%}%(?..(%?%))%{${fg[yellow]}${bg[black]}%}%# "
ls
dasdf
exit
asdfas
exit
exit
print PS1
print $PS1
\:q
zsh
exit
ls
ls
asdfa
exit
ls
lsadf
cd /Users/jzmoolman/miniconda/etc
ls
cd profile.d
ls
nvim conda.sh
ls
cd ..
ls
cd ..
ls
conda
ls
ls conda
ls
pwd
cd bin
ls
ls
pwd
cd ..
ls
pwd
find . -name shell.zsh
find . -name shell.zsh
cond shell.zsh hook
conda shell.zsh hook
cond info -envs
conda indo -envs
conda info -envs
conda info --envs
conda env list
print $CONDA_PREFIX
print $CONDA_DEFAULT_ENV
exit
ls
ll
conda config --show
conda config --show
print echo $RPS1
print $RPS1
set
print $RPS1
RPS1=asdfa
RPS1=$CONDA_DEFAULT_ENV
conda list --env
conda list env
cond list --env
conda list --env
conda list
conda list env
conda list --envs
conda list --envs
conda info --envs
conda activate 6.68x
conda activate 6.86x
RPS1=$CONDA_DEFAULT_ENV
cd /
find / -name shell.zsh 2>/dev/null
exit
exit
RPS1=PWD
RPS1=${PWD}
RPS1=${$CONDA_DEFAULT_ENV}
RPS1=${echo $CONDA_DEFAULT_ENV}
RPS1=${print $CONDA_DEFAULT_ENV}
RPS1=${'print $CONDA_DEFAULT_ENV'}
RPS1=${'$CONDA_DEFAULT_ENV'}
RPS1=${$CONDA_DEFAULT_ENV}
RPS1='$CONDA_DEFAULT_ENV'
print RPS1
print $RPS1
conda active 6.86x
conda actiate 6.86x
conda activate 6.86x
setpts nopromtsubst
setopt nopromtsubst
setopt nopromptsubst
setopt promptsubst
exit
exit
ls
exit
lst
ls
ls
exit
exit
exit
dclear
clear
aklsdfjl;asdkfj
exit
exit
eixt
exit
sudo chsh -s /bin/zsh
exit
PS1="%{${bg[white]}${fg[red]}%}%(?..(%?%))%{${fg[yellow]}$bg[black]}%}%# "
autolaod colors
autoload colors
colors
PS1="%{${bg[white]}${fg[red]}%}%(?..(%?%))%{${fg[yellow]}$bg[black]}%}%# "
exit
exit
asdfas
exit
cd /
cd Applications
cd ..
exit
exit
cd /Applications
exit
zsh
zsh
klkj
zsh
zsh
exit
exit
exit
cd /Applications
sxh
zsh
exit
exit
exit
cd /Applications
clear
exit
kexit
exit
asdjf kl    exxit
exit
ffffffls 
ls
nnn
ls
exit
exit
asldkfja;sdkfj;lasdkjf
clear
cd /Applications
exit
sxh
zsh
zsh
zsh
zsh
zsh
zsh
zsh
exit
cdexit
exit
cd /Applications
cd Alacritty.app
cd /
cd
exit
cd /Applications
ls
cd 
conda activate 6.68x
conda info --envs
conda activate 6.86x
clear
alsdjfal;sdkjfa;lsddkjfa;lksdjfa;sldkjfa;slkdjfa;klsjdfa;klsdjfk;asldjf;aklsdjfa;skldjfa;lskjf;alsdjkf;laskjf akljfa sklfj a;sdlkfja;sldfkj a;sdklfj a;sdklf ja;klsjdf a;kldfj al;ksdfj a;klsfdja;klsdfjalskdjf;aljksfa;lksjdfa;slkfjk;ljasdf
cd src
;s
l;s
ls
cd CS50
ls
cd assignment
cd assignment0
ls
ls -la
clear
cd 
zsh
zsh
exit
print "\033]0;:> $(pwd)"
cd 
cd /
print "\033]0;:> $(pwd)"
precmd() {\
print 'precmd'\
print "\033]0;:> $(pwd)"\
}
cd 
ls
ls
cd
cd /
exit
asdfalskdjf
;s
find / -name colors 2>/dev/null
nvim /usr/share/zsh/5.8/functions/colors
exit
ls
cd /
echo $TERM
set
exit
ls
cd /
exit
cd
cd /
cd 
printf '\e]2;%s\a' "$@"
printf '\e]2;%s\a' "$@"
printf '\e]2;%s\a' "$@"
printf '\e]2;%s\a' "$pwd"
printf '\e]2;%s\a' "$PWD"
exit
j
cd /
cd 
exit
